## view name: vw_programmatic_all_index
## description: create partner view for programmatic_all that utilizes raw data and standardizes logic within prog_all
## created by: bj.hollowell@dotdashmdp.com
## Last modified on: 12/06/2022
## Last modified by: bj.hollowell@dotdashmdp.com
## Change log:  04/07/22 Created static table for 2020 Index OB data rather than the wildcard.
##              07/07/22 added tag_site logic for when supply_source = 'enterprise'
##              11/16/22 added about-dss-01 source for ddm base from 7/1/22 onward
##              11/28/22 fix the bid section date range
##              12/05/22 amend transaction_type logic to use deal_id, not deal_type
##              12/06/22 amend deal_name logic
##
##
## notes:
##

WITH

index_ddm_base AS (
    SELECT
        dt,
        timestamp,
        size,
        inventory_channel,
        supply_source,
        device_type,
        country,
        brand_name,
        deal_id,
        creative_type,
        net_revenue,
        gross_revenue,
        1 AS impressions,
        SAFE_CAST(dsp_id AS INT64) AS dsp_id,
        SAFE_CAST(trading_desk_id AS INT64) AS trading_desk_id,
        SAFE_CAST(site_id AS INT64) AS site_id,
        domain
    FROM `about-dss-01.index_exchange.impression_logs_ddm`
    WHERE
        dt >= '2020-07-01' AND
        supply_source <> 'ebda'
),

index_mdp_base AS (
    SELECT
        mdpfiledate,
        TIMESTAMP_MILLIS(timestamp) AS timestamp,
        size,
        inventory_channel,
        supply_source,
        device_type,
        country,
        brand_name,
        deal_id,
        creative_type,
        net_revenue,
        gross_revenue,
        1 AS impressions,
        dsp_id,
        trading_desk_id,
        site_id,
        domain
    FROM `meredith-switchboard.indexexchange_audit_logs.indexexchange_impression_log`
    WHERE
        TIMESTAMP_MILLIS(timestamp) BETWEEN '2020-01-01' AND '2022-06-30' AND
        supply_source <> 'ebda'
),

index_base_union AS(
    SELECT * FROM index_mdp_base
    UNION ALL
    SELECT * FROM index_ddm_base
),

index_mapped AS (
    SELECT
        A.mdpfiledate,
        A.timestamp,
        A.size,
        A.inventory_channel,
        A.supply_source,
        A.device_type,
        A.country,
        A.brand_name,
        A.deal_id,
        A.creative_type,
        A.domain,
        B.buyer_name AS buyer_name,
        C.deal_type AS deal_type,
        C.deal_name AS deal_name,
        D.dsp_name AS dsp_name,
        E.site_name AS site_name,
        SUM(A.net_revenue) AS net_revenue,
        SUM(A.gross_revenue) AS gross_revenue,
        SUM(A.impressions) AS impressions
    FROM index_base_union A

    LEFT JOIN `meredith-switchboard.indexexchange_audit_logs.mapping_buyers` B
    ON A.dsp_id = B.dsp_id AND A.trading_desk_id = B.trading_desk_id

    LEFT JOIN `meredith-switchboard.indexexchange_audit_logs.mapping_deals` C
    ON A.deal_id = C.deal_id

    LEFT JOIN `meredith-switchboard.indexexchange_audit_logs.mapping_dsps` D
    ON A.dsp_id = D.dsp_id

    LEFT JOIN `meredith-switchboard.indexexchange_audit_logs.mapping_sites` E
    ON A.site_id = E.site_id

    GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16
),

index_cleaned AS (
    SELECT
        --mdpfiledate,
        'Index CAL' AS source,
        timestamp AS date,
        'Index' AS partner,
        CASE
            WHEN supply_source = 'enterprise' THEN CONCAT('Index', ';', index_mapped.domain)
            ELSE CONCAT('Index', ';', index_mapped.site_name)
            END AS tag_site,
        CASE
            WHEN deal_id = 'omitted' THEN 'Open'
            ELSE 'PMP'
            END AS transaction_type,
        '' AS site,
        '' AS tier,
        CASE
            WHEN size = '300x250'       THEN '300x250'
            WHEN size = '320x50'        THEN '320x50'
            WHEN size = '728x90'        THEN '728x90'
            WHEN size = '300x600'       THEN '300x600'
            WHEN size = 'Video/Overlay' THEN 'Video/Overlay'
            WHEN size = '970x250'       THEN '970x250'
            WHEN size = '300x1050'      THEN '300x1050'
            WHEN size = 'Fluid'         THEN 'Fluid'
            ELSE size
            END AS ad_size_initial,
        CASE
            WHEN size = '300x250'       THEN '300x250'
            WHEN size = '320x50'        THEN '320x50'
            WHEN size = '728x90'        THEN '728x90'
            WHEN size = '300x600'       THEN '300x600'
            WHEN size = 'Video/Overlay' THEN 'Video/Overlay'
            WHEN size = '970x250'       THEN '970x250'
            WHEN size = '970x90'        THEN '970x90'
            WHEN size = '300x1050'      THEN '300x1050'
            WHEN size = 'Fluid'         THEN 'Fluid'
            WHEN size = '640x360'       THEN 'Video/Overlay'
            ELSE 'Other'
            END AS ad_size,
        CASE
            WHEN creative_type = 'Video'      THEN 'Video'
            WHEN inventory_channel = 'Video'  THEN 'Video'
            WHEN inventory_channel = 'In-App' THEN 'App'
            WHEN size = '640x360'             THEN 'Video'
            ELSE 'Display'
            END AS ad_type,
        CASE
            WHEN supply_source = 'ebda'       THEN 'OB'
            WHEN supply_source = 'enterprise' THEN 'TAM'
            ELSE 'HB'
            END AS path_type,
        device_type AS device_type_initial,
        CASE
            WHEN inventory_channel LIKE '%AMP%'    THEN 'AMP'
            WHEN inventory_channel LIKE '%amp%'    THEN 'AMP'
            WHEN device_type = 'mobile'            THEN 'MobileWeb'
            WHEN device_type = 'Mobile'            THEN 'MobileWeb'
            WHEN device_type = 'phone'             THEN 'MobileWeb'
            WHEN device_type = 'desktop'           THEN 'Desktop'
            WHEN device_type = 'Desktop'           THEN 'Desktop'
            WHEN device_type = 'personal_computer' THEN 'Desktop'
            WHEN device_type = 'tablet'            THEN 'Desktop'
            WHEN device_type = 'connected_tv'      THEN 'Connected TV'
            WHEN device_type = 'set_top_box'       THEN 'Connected TV'
            WHEN device_type = 'connected_device'  THEN 'ott'
            WHEN device_type = 'other'             THEN 'Other'
            WHEN device_type = 'unknown'           THEN 'Unknown'
            ELSE device_type
            END AS device_type,
        country AS Country_initial,
        CASE
            WHEN country = 'US'      THEN 'USA'
            WHEN country = 'Unknown' THEN 'Unknown'
            ELSE 'XUS'
            END AS country,
        dsp_name AS dsp_initial,
        buyer_name AS buyer_initial,
        brand_name AS advertiser_initial,
        CASE
            WHEN deal_id = 'omitted' THEN 'Open'
            ELSE deal_id
            END AS deal_id,
        CASE
            WHEN deal_name IS NULL AND deal_id <> 'omitted' THEN deal_id
            WHEN deal_name IS NULL AND deal_id = 'omitted' THEN 'Open'
            ELSE deal_name
            END AS deal_name,
        SUM(net_revenue) AS net_revenue,
        SUM(gross_revenue) AS gross_revenue,
        SUM(impressions) AS imps,
        NULL AS active_view_measured_impressions,
        NULL AS active_view_viewed_impressions,
        NULL AS bid_requests,
        NULL AS bid_responses,
        --indexexchange_audit_log_source_filename AS filename,
        --switchboard_processing_time
    FROM index_mapped
    GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20
),

index_unioned AS (
    SELECT * FROM index_cleaned
    UNION ALL
    SELECT * FROM `meredith-switchboard.programmatic_all_partners.tbl_index_OB_historical`
    ## OB_historical only runs from 1/1/2020 - 7/1/2020
),

index_bid_prog_all_proxy AS (
    SELECT
        'Index CAL' AS source,
        CAST(day AS TIMESTAMP) AS date,
        'Index' AS partner,
        '' AS tag_site,
        'PMP' AS transaction_type,
        '' AS site,
        '' AS tier,
        '' AS ad_size_initial,
        '' AS ad_size,
        '' AS ad_type,
        'HB' AS path_type,
        '' AS device_type_initial,
        '' AS device_type,
        '' AS country_initial,
        '' AS country,
        '' AS dsp_initial,
        '' AS buyer_initial,
        '' AS advertiser_initial,
        deal_id AS deal_id,
        deal_name AS deal_name,
        NULL AS net_revenue,
        NULL AS gross_revenue,
        NULL AS imps,
        NULL AS active_view_measured_impressions,
        NULL AS active_view_viewed_impressions,
        bid_request AS bid_requests,
        bids_returned AS bid_responses
    FROM `meredith-switchboard.indexexchange.ix_pmp_bid_volume_202*`
    WHERE day >= '2020-01-01'
),

index_final_unioned AS (
    SELECT * FROM index_unioned
    UNION ALL
    SELECT * FROM index_bid_prog_all_proxy
)

SELECT * FROM index_final_unioned
