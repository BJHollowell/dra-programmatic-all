## view name: vw_programmatic_all_yieldmo
## description: create partner view for programmatic_all that utilizes raw data and standardizes logic within prog_all
## created by: bj.hollowell@meredith.com
## Last modified on:
## Last modified by:
## Change log:
##
##
## notes:
##

WITH

prog_tag_map AS (
    SELECT
        * EXCEPT(tag_site),
        tag_site AS tag_site_map
    FROM `meredith-switchboard.summary_reports.programmatic_tag_mapping`
),

yieldmo_backfill AS (
    SELECT
        source,
        CAST(Date AS TIMESTAMP) AS date,
        partner,
        tag_site,
        transaction_type,
        --'' AS site,
        --'' AS tier,
        ad_size_initial,
        ad_size,
        'NonGam Display' AS ad_type,
        'Indirect' AS path_type,
        device_type_initial,
        device_type,
        country_initial,
        country,
        dsp_initial,
        buyer_initial,
        advertiser_initial,
        deal_id,
        deal_name,
        net_revenue,
        gross_revenue,
        imps,
        CAST(active_view_measured_impressions AS INT64) AS active_view_measured_impressions,
        CAST(active_view_viewed_impressions AS INT64) AS active_view_viewed_impressions,
        CAST(bid_requests AS INT64) AS bid_requests,
## look into yieldmo backfill to see if the field is actually repsonses?
        CAST(bid_repsonses AS INT64) AS bid_responses
    FROM `meredith-switchboard.yieldmo.yieldmo_meredith_allsites_backfill_data`
),

yieldmo_base AS (
    SELECT * FROM `meredith-switchboard.yieldmo.yieldmo_meredith_allsites_2*`
),

yieldmo_cleaned AS (
    SELECT
        'Yieldmo Email' AS source,
        CAST(Date AS TIMESTAMP) AS date,
        'YieldMo' AS partner,
        CONCAT('YieldMo', ';', Placement_Description) AS tag_site,
        'Open' AS transaction_type,
        --'' AS site,
        --'' AS tier,
        '' AS ad_size_initial,
        '' AS ad_size,
        CASE
            WHEN Placement_Description LIKE '%tier%' THEN 'Display'
            ELSE 'NonGam Display'
            END AS ad_type,
        CASE
            WHEN Placement_Description LIKE '%tier%' THEN 'Tag in adserver'
            ELSE 'Indirect'
            END AS path_type,
        '' AS device_type_initial,
        '' AS device_type,
        '' AS country_initial,
        'Unknown' AS country,
        '' AS dsp_initial,
        '' AS buyer_initial,
        '' AS advertiser_initial,
        '' AS deal_id,
        '' AS deal_name,
        revenue AS net_revenue,
        (revenue / 0.7) AS gross_revenue,
        impressions AS imps,
        NULL AS active_view_measured_impressions,
        NULL AS active_view_viewed_impressions,
        NULL AS bid_requests,
        NULL AS bid_responses
    FROM yieldmo_base
),

yieldmo_mapped AS (
    SELECT
        A.source,
        A.date,
        A.partner,
        A.tag_site,
        A.transaction_type,
        --A.site,
        --A.tier,
        A.ad_size_initial,
        B.adsize AS ad_size,
        A.ad_type,
        A.path_type,
        A.device_type_initial,
        B.device AS device_type,
        A.country_initial,
        A.country,
        A.dsp_initial,
        A.buyer_initial,
        A.advertiser_initial,
        A.deal_id,
        A.deal_name,
        A.net_revenue,
        A.gross_revenue,
        A.imps,
        A.active_view_measured_impressions,
        A.active_view_viewed_impressions,
        A.bid_requests,
        A.bid_responses
    FROM yieldmo_cleaned as A

    LEFT JOIN prog_tag_map as B
    ON A.tag_site = B.tag_site_map
),

yieldmo_final AS (
    SELECT * FROM yieldmo_mapped
    UNION ALL
    SELECT * FROM yieldmo_backfill
)

SELECT * FROM yieldmo_final
