## view name: vw_programmatic_all_solve
## description: create partner view for programmatic_all that utilizes raw data and standardizes logic within prog_all
## created by: bj.hollowell@meredith.com
## Last modified on: 3/22/2022
## Last modified by: bj.hollowell@meredith.com
## Change log:  3/22/2022 Removed individual mapping within partner views so it can all be done once in prod version.
##              Also aggregated the base-level data and cleaned-level data fully to reduce file/processing size(s)
## notes:
##

WITH

solve_base AS (
    SELECT
        CASE
            WHEN table_id  = '20201106' THEN PARSE_DATE('%F', Date)
            WHEN table_id <> '20201106' THEN PARSE_DATE('%m/%d/%Y', Date)
            END AS date_final,
        Publisher,
        SUM(Revenue) AS Revenue,
        SUM(Served) AS Served
    FROM (
        SELECT
            _table_suffix AS table_id,
            Date,
            Publisher,
            Revenue,
            Served
        FROM `meredith-switchboard.solve.solve_*`
    )
    GROUP BY 1,2
),

solve_cleaned AS (
    SELECT
        'Solve Email' AS source,
        CAST(date_final AS TIMESTAMP) AS date,
        'Solve' AS partner,
        CONCAT('Solve', ';', Publisher) AS tag_site,
        'Open' AS transaction_type,
        '' AS site,
        'NoTier' AS tier,
        '' AS ad_size_initial,
        'Captcha' AS ad_size,
        'NonGam Display' AS ad_type,
        'Indirect' AS path_type,
        '' AS device_type_initial,
        'Unknown' AS device_type,
        '' AS country_initial,
        'Unknown' AS country,
        '' AS dsp_initial,
        '' AS buyer_initial,
        '' AS advertiser_initial,
        '' AS deal_id,
        '' AS deal_name,
        SUM(Revenue) AS net_revenue,
        SUM(CASE
            WHEN (date_final >= '2021-06-01') THEN (Revenue / 0.70)
            ELSE (Revenue / 0.45)
            END ) AS gross_revenue,
        SUM(Served) AS imps,
        NULL AS active_view_measured_impressions,
        NULL AS active_view_viewed_impressions,
        NULL AS bid_requests,
        NULL AS bid_responses
    FROM solve_base
    GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20
)

SELECT * FROM solve_cleaned
