## view name: vw_programmatic_all_yieldmo
## description: create partner view for programmatic_all that utilizes raw data and standardizes logic within prog_all
## created by: bj.hollowell@meredith.com
## Last modified on: 3/2/2022
## Last modified by: bj.hollowell@meredith.com
## Change log: limiting fields pulled in from raw data source
##
##
## notes:
##

WITH

yieldmo_backfill AS (
    SELECT
        source,
        CAST(Date AS TIMESTAMP) AS date,
        partner,
        tag_site,
        transaction_type,
        '' AS site,
        '' AS tier,
        ad_size_initial,
        ad_size,
        'NonGam Display' AS ad_type,
        'Indirect' AS path_type,
        device_type_initial,
        device_type,
        country_initial,
        country,
        dsp_initial,
        buyer_initial,
        advertiser_initial,
        deal_id,
        deal_name,
        SUM(net_revenue) AS net_revenue,
        SUM(gross_revenue) AS gross_revenue,
        SUM(imps) AS imps,
        CAST(SUM(active_view_measured_impressions) AS INT64) AS active_view_measured_impressions,
        CAST(SUM(active_view_viewed_impressions) AS INT64) AS active_view_viewed_impressions,
        CAST(SUM(bid_requests) AS INT64) AS bid_requests,
## look into yieldmo backfill to see if the field is actually repsonses?
        CAST(SUM(bid_repsonses) AS INT64) AS bid_responses
    FROM `meredith-switchboard.yieldmo.yieldmo_meredith_allsites_backfill_data`
    GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20
),

yieldmo_base AS (
    SELECT
        Date,
        Placement_Description,
        SUM(revenue) AS revenue,
        SUM(impressions) AS impressions
    FROM `meredith-switchboard.yieldmo.yieldmo_meredith_allsites_2*`
    GROUP BY 1,2
),

yieldmo_cleaned AS (
    SELECT
        'Yieldmo Email' AS source,
        CAST(Date AS TIMESTAMP) AS date,
        'YieldMo' AS partner,
        CONCAT('YieldMo', ';', Placement_Description) AS tag_site,
        'Open' AS transaction_type,
        '' AS site,
        '' AS tier,
        '' AS ad_size_initial,
        'to_be_mapped' AS ad_size,
        CASE
            WHEN Placement_Description LIKE '%tier%' THEN 'Display'
            ELSE 'NonGam Display'
            END AS ad_type,
        CASE
            WHEN Placement_Description LIKE '%tier%' THEN 'Tag in adserver'
            ELSE 'Indirect'
            END AS path_type,
        '' AS device_type_initial,
        'to_be_mapped' AS device_type,
        '' AS country_initial,
        'Unknown' AS country,
        '' AS dsp_initial,
        '' AS buyer_initial,
        '' AS advertiser_initial,
        '' AS deal_id,
        '' AS deal_name,
        SUM(revenue) AS net_revenue,
        SUM((revenue / 0.7)) AS gross_revenue,
        SUM(impressions) AS imps,
        NULL AS active_view_measured_impressions,
        NULL AS active_view_viewed_impressions,
        NULL AS bid_requests,
        NULL AS bid_responses
    FROM yieldmo_base
    GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20
),

yieldmo_unioned AS (
    SELECT * FROM yieldmo_cleaned
    UNION ALL
    SELECT * FROM yieldmo_backfill
)

SELECT * FROM yieldmo_unioned
