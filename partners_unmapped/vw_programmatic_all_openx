## view name: vw_programmatic_all_openx
## description: create partner view for programmatic_all that utilizes raw data and standardizes logic within prog_all
## created by: bj.hollowell@meredith.com
## Last modified on: 3/22/2022
## Last modified by: bj.hollowell@meredith.com
## Change log:  3/22/2022 Removed individual mapping within partner views so it can all be done once in prod version.
##              Also aggregated the base-level data and cleaned-level data fully to reduce file/processing size(s)
## notes:
##

WITH

openx_base AS (
    SELECT
        day,
        pageDomain,
        publisherAdUnitName,
        publisherAccountName,
        userDeviceType,
        userGeoCountry,
        demandPartnerAccountName,
        buyerName,
        openXBrandName,
        privateMarketplacePublisherDealId,
        privateMarketplacePublisherDealName,
        ad_size,
        table_id,
        SUM(marketPublisherRevenueinPCoin) AS marketPublisherRevenueinPCoin,
        SUM(marketImpressions) AS marketImpressions
    FROM (
        SELECT
            A.day,
            pageDomain,
            publisherAdUnitName,
            publisherAccountName,
            userDeviceType,
            userGeoCountry,
            demandPartnerAccountName,
            buyerName,
            openXBrandName,
            privateMarketplacePublisherDealId,
            privateMarketplacePublisherDealName,
            marketPublisherRevenueinPCoin,
            marketImpressions,
            CONCAT(adWidth, ';', adHeight) AS ad_size,
            _table_suffix AS table_id
        FROM `meredith-switchboard.openx.openx_api_*` A

        INNER JOIN (
            SELECT
                day,
                MAX(_table_suffix) AS max_table_id
            FROM `meredith-switchboard.openx.openx_api_*`
            GROUP BY 1 ) B
        ON A.day = B.day AND A._table_suffix = B.max_table_id
    ## OpenX stopped sending multiple dates in each file back in Sept. 2020, but deduping is needed going back to those dates.
    )
    WHERE day >= '2020-01-01'
    GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13
),

openx_cleaned AS (
    SELECT
        'OpenX Email' AS source,
        CAST(day AS TIMESTAMP) AS date,
        'OpenX' AS partner,
        CONCAT('OpenX', ';', pageDomain, ';', publisherAdUnitName) AS tag_site,
        'Open' AS transaction_type,
        '' AS site,
        '' AS tier,
        ad_size AS ad_size_initial,
        CASE
            WHEN ad_size LIKE '300x250'  THEN '300x250'
            WHEN ad_size LIKE '320x50'   THEN '320x50'
            WHEN ad_size LIKE '728x90'   THEN '728x90'
            WHEN ad_size LIKE '300x600'  THEN '300x600'
            WHEN ad_size LIKE '970x250'  THEN '970x250'
            WHEN ad_size LIKE '300x1050' THEN '300x1050'
            WHEN ad_size LIKE '970x90'   THEN '970x90'
            WHEN ad_size LIKE '1x1'      THEN 'Video/Overlay'
            WHEN ad_size LIKE '640x390'  THEN 'Video/Overlay'
            WHEN ad_size LIKE '640x360'  THEN 'Video/Overlay'
            ELSE 'Other'
            END AS ad_size,
        CASE
            WHEN publisherAdUnitName LIKE '%preroll%' THEN 'Video'
            WHEN publisherAdUnitName LIKE '%Preroll%' THEN 'Video'
            WHEN publisherAdUnitName LIKE '%video%'   THEN 'Video'
            WHEN publisherAdUnitName LIKE '%Video%'   THEN 'Video'
            WHEN publisherAdUnitName LIKE '%spinner%' THEN 'App'
            WHEN publisherAdUnitName LIKE '%Spinner%' THEN 'App'
            ELSE 'Display'
            END AS ad_type,
        CASE
            WHEN publisherAccountName LIKE '%A9%' THEN 'TAM'
            ELSE 'HB'
            END AS path_type,
        userDeviceType AS device_type_initial,
        CASE
            WHEN publisherAdUnitName LIKE '%amp%' THEN 'AMP'
            WHEN publisherAdUnitName LIKE '%AMP%' THEN 'AMP'
            WHEN userDeviceType LIKE '%phone%'    THEN 'MobileWeb'
            ELSE 'Desktop'
            END AS device_type,
        userGeoCountry AS country_initial,
        CASE
            WHEN userGeoCountry LIKE '%United States%' THEN 'USA'
            WHEN userGeoCountry LIKE '%N/A%'           THEN 'Unknown'
            ELSE 'XUS'
            END AS country,
        demandPartnerAccountName AS dsp_initial,
        buyerName AS buyer_initial,
        openXBrandName AS advertiser_initial,
        CASE
            WHEN privateMarketplacePublisherDealId IS NOT NULL THEN privateMarketplacePublisherDealId
            ELSE 'Open'
            END AS deal_id,
        CASE
            WHEN privateMarketplacePublisherDealName IS NOT NULL THEN privateMarketplacePublisherDealName
            ELSE 'Open'
            END AS deal_name,
        SUM(CASE
            WHEN CAST(day AS DATETIME) >= '2021-09-30' THEN marketPublisherRevenueinPCoin
            ELSE (marketPublisherRevenueinPCoin / 1000000)
            END ) AS net_revenue,
        SUM(CASE
            WHEN CAST(day AS DATETIME) >= '2021-09-30' THEN (marketPublisherRevenueinPCoin / 0.85)
            ELSE ((marketPublisherRevenueinPCoin / 1000000) / 0.85)
            END ) AS gross_revenue,
        CAST(FLOOR(SUM(marketImpressions)) AS INT64) AS imps,
        NULL AS active_view_measured_impressions,
        NULL AS active_view_viewed_impressions,
        NULL AS bid_requests,
        NULL AS bid_repsonses
    FROM openx_base
    GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21
)

SELECT * FROM openx_cleaned
